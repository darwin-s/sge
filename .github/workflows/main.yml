name: CMake Build

on:
    push:
        branches: [ master ]
    pull_request:
        branches: [ master ]

jobs:
    build-ubuntu:
        runs-on: [ubuntu-20.04]
        steps:
            - uses: actions/checkout@v2

            - name: Install conan
              run: sudo python -m pip install conan

            - name: Download sdl2 development files
              run: sudo apt-get install -qq libsdl2-dev
                  
            - name: Create Build Environment
              run: cmake -E make_directory ${{runner.workspace}}/build

            - name: Conan add default profile
              run: conan profile new default --detect

            - name: Conan modify default profile
              run: conan profile update settings.compiler.libcxx=libstdc++11 default

            - name: Conan install
              shell: bash
              working-directory: ${{runner.workspace}}
              run: conan install -if build $GITHUB_WORKSPACE

            - name: Configure CMake
              shell: bash
              working-directory: ${{runner.workspace}}/build
              run: CC=gcc-9 CXX=g++-9 cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=Release

            - name: Build
              working-directory: ${{runner.workspace}}/build
              shell: bash
              run: CC=gcc-9 CXX=g++-9 cmake --build . --config Release
              
    build-windows:
            runs-on: [windows-latest]
            steps:
                - uses: actions/checkout@v2

                - name: Install conan
                  run: python -m pip install conan

                - name: Create Build Environment
                  run: cmake -E make_directory ${{runner.workspace}}/build

                - name: Conan install
                  shell: bash
                  working-directory: ${{runner.workspace}}
                  run: conan install -if build $GITHUB_WORKSPACE

                - name: Configure CMake
                  shell: bash
                  working-directory: ${{runner.workspace}}/build
                  run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=Release

                - name: Build
                  working-directory: ${{runner.workspace}}/build
                  shell: bash
                  run: cmake --build . --config Release
